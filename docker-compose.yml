services:

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - leave-request-service
    networks:
      - approval-service

  leave-request-service:
    build:
      context: ./services/leave-request-service
      dockerfile: Dockerfile
    container_name: leave-request-service
    restart: always
    expose:
      - "8080"
#    depends_on:
#      - employee-service
#      - request-service
#      - balance-service
#      - gmail-service
    environment:
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    networks:
      - approval-service

  balance-service-db:
    image: mysql:8
    container_name: balance_service_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_BALANCE_SERVICE_DB_NAME}
    ports:
      - "3309:3306"
    volumes:
      - balance_service_mysql-data:/var/lib/mysql
    networks:
      - approval-service

  balance-service:
    build:
      context: ./services/balance-service
      dockerfile: Dockerfile
    container_name: balance-service
    restart: always
    expose:
      - "8080"
    depends_on:
      - balance-service-db
    environment:
      SPRING_DATASOURCE_URL: ${MYSQL_BALANCE_SERVICE_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - approval-service

  employee-service-db:
    image: mysql:8
    container_name: employee_service_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_EMPLOYEE_SERVICE_DB_NAME}
    ports:
      - "3307:3306"
    volumes:
      - employee_service_mysql-data:/var/lib/mysql
    networks:
      - approval-service

  employee-service:
    build:
      context: ./services/employee-service
      dockerfile: Dockerfile
    container_name: employee-service
    restart: always
    expose:
      - "8080"
    depends_on:
      - employee-service-db
      - auth-service
    environment:
      SPRING_DATASOURCE_URL: ${MYSQL_EMPLOYEE_SERVICE_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - approval-service

  request-service-db:
    image: mysql:8
    container_name: request_service_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_EMPLOYEE_SERVICE_DB_NAME}
    ports:
      - "3308:3306"
    volumes:
      - request_service_mysql-data:/var/lib/mysql
    networks:
      - approval-service

  request-service:
    build:
      context: ./services/request-service
      dockerfile: Dockerfile
    container_name: request-service
    restart: always
    expose:
      - "8080"
    depends_on:
      - request-service-db
    environment:
      SPRING_DATASOURCE_URL: ${MYSQL_EMPLOYEE_SERVICE_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - approval-service

  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    restart: always
    expose:
      - "8080"
    environment:
      JWT_EXPIRATION_TIME_BY_SECOND: ${JWT_EXPIRATION_TIME_BY_SECOND}
    networks:
      - approval-service

  gmail-service:
    build:
      context: ./services/gmail-service
      dockerfile: Dockerfile
    container_name: gmail-service
    restart: always
    depends_on:
      - rabbitmq
    expose:
      - "8080"
    environment:
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USER: ${MAIL_USER}
      MAIL_PASSWORD: ${MAIL_PASSWORD}

      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    networks:
      - approval-service

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"     # Cổng giao tiếp AMQP
      - "15672:15672"   # Cổng giao diện quản lý Web UI
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    networks:
      - approval-service

volumes:
  employee_service_mysql-data:
  balance_service_mysql-data:
  request_service_mysql-data:

networks:
  approval-service:
    driver: bridge